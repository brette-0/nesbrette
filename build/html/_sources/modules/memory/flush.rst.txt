``flush``
---------

``ldz __gpr__``
""""""""""""""""""""""""""""""""""""""""

``includefrom memory, flush``

.. note::

    .. code-block::

        required:
            (ca65_int)          __gpr__         fails on invalid GPR

        dependacies:
            libcore

    .. code-block::

        ldz                     ; lda #$00                  2b 2c
        ldz xr                  ; ldx #$00                  2b 2c

``stz __target__, __reg$__, __zero$__``
""""""""""""""""""""""""""""""""""""""""

.. note::

    .. code-block::

        required:
            (nb: int, ident: addr) __target__
        
        optional:
            (token | gpr: gpr?)     __reg$__        fails on invalid GPRs
            (ca65_bool)             __zero$__       No room for error


        dependacies:
            libcore

    Stores ``$00`` at set variable in memory with optional indexing with token or ``enum`` with optional 'load->store' ``gpr`` specifism and 'assume gpr 'r' is already zero'.

    .. code-block::

        stz Score               ; (4 * w_Score) + 2c : (3 * w_Score) + 2b 
        stz u32: Score          ; =
        stz ScoreLen: Score     ; =
        stz Region, y           ; + w_Score * 1.5c +0b
        stz Region, null : x    ; (4 * w_Score) + 2c : (3 * w_Score) + 2b 
        stz Region, y, 1        ; -2c, -2b

`View Source Code on Github <https://github.com/brette-0/nesbrette/blob/main/lib/memory/flush.asm>`_